labs(
y = "Muertes por Covid-19",
caption = caption);
graficoRanking <- grRank1 + grRank2;
graficoRanking
atosparapie <- aggregate(deathsAcum ~ countriesAndTerritories + popData2018, data = datoscovidok, FUN = max);
datosparapie$cada100 <- datosparapie$deathsAcum / datosparapie$popData2018 * 100000;
library(RColorBrewer)
myPalette <- brewer.pal(NROW(datosparapie), "Set2");
datosparapie2 <- datosparapie[datosparapie$deathsAcum>300, ];
datosparapie2$countriesAndTerritories <- factor(datosparapie2$countriesAndTerritories, levels = datosparapie2$countriesAndTerritories[order(datosparapie2$deathsAcum)]);
#datosparapie2 <- datosparapie2[rev(order(datosparapie2$deathsAcum)), ];
grRank1 <- ggplot(data = datosparapie2,
mapping = aes(x=countriesAndTerritories, y=deathsAcum) ) +
geom_segment( aes(x=countriesAndTerritories ,xend=countriesAndTerritories, y=0, yend=deathsAcum), color="grey") +
geom_point(size=3, color="#69b3a2") +
geom_text(aes(y = deathsAcum, label = format(deathsAcum, big.mark = ".")), color="grey", size=3, nudge_y = 3500) +
scale_y_continuous(labels = scales::comma_format()) +
coord_flip() +
theme(
panel.grid.minor.y = element_blank(),
panel.grid.major.y = element_blank(),
legend.position="none"
) +
xlab("");
datosparapie2$countriesAndTerritories <- factor(datosparapie2$countriesAndTerritories, levels = datosparapie2$countriesAndTerritories[order(datosparapie2$cada100)]);
grRank2 <- ggplot(data = datosparapie2,
mapping = aes(x=countriesAndTerritories, y=deathsAcum / popData2018 * 100000) ) +
geom_segment( aes(x=countriesAndTerritories ,xend=countriesAndTerritories, y=0, yend=deathsAcum / popData2018 * 100000), color="grey") +
geom_point(size=3, color="#69b3a2") +
geom_text(aes(y = deathsAcum / popData2018 * 100000, label = format(deathsAcum, big.mark = ".")), color="grey", size=3, nudge_y = 3) +
scale_y_continuous(labels = scales::comma_format()) +
coord_flip() +
theme(
panel.grid.minor.y = element_blank(),
panel.grid.major.y = element_blank(),
legend.position="none"
) +
xlab("") +
labs(
y = "Muertes por Covid-19",
caption = caption);
graficoRanking <- grRank1 + grRank2;
datosparapie <- aggregate(deathsAcum ~ countriesAndTerritories + popData2018, data = datoscovidok, FUN = max);
datosparapie$cada100 <- datosparapie$deathsAcum / datosparapie$popData2018 * 100000;
library(RColorBrewer)
myPalette <- brewer.pal(NROW(datosparapie), "Set2");
datosparapie2 <- datosparapie[datosparapie$deathsAcum>300, ];
datosparapie2$countriesAndTerritories <- factor(datosparapie2$countriesAndTerritories, levels = datosparapie2$countriesAndTerritories[order(datosparapie2$deathsAcum)]);
#datosparapie2 <- datosparapie2[rev(order(datosparapie2$deathsAcum)), ];
grRank1 <- ggplot(data = datosparapie2,
mapping = aes(x=countriesAndTerritories, y=deathsAcum) ) +
geom_segment( aes(x=countriesAndTerritories ,xend=countriesAndTerritories, y=0, yend=deathsAcum), color="grey") +
geom_point(size=3, color="#69b3a2") +
geom_text(aes(y = deathsAcum, label = format(deathsAcum, big.mark = ".")), color="grey", size=3, nudge_y = 4000) +
scale_y_continuous(labels = scales::comma_format()) +
coord_flip() +
theme(
panel.grid.minor.y = element_blank(),
panel.grid.major.y = element_blank(),
legend.position="none"
) +
xlab("") +
labs(
y = "Muertes por Covid-19 cada 100.000 habitantes");
datosparapie2$countriesAndTerritories <- factor(datosparapie2$countriesAndTerritories, levels = datosparapie2$countriesAndTerritories[order(datosparapie2$cada100)]);
grRank2 <- ggplot(data = datosparapie2,
mapping = aes(x=countriesAndTerritories, y=deathsAcum / popData2018 * 100000) ) +
geom_segment( aes(x=countriesAndTerritories ,xend=countriesAndTerritories, y=0, yend=deathsAcum / popData2018 * 100000), color="grey") +
geom_point(size=3, color="#69b3a2") +
geom_text(aes(y = deathsAcum / popData2018 * 100000, label = format(deathsAcum, big.mark = ".")), color="grey", size=3, nudge_y = 4) +
scale_y_continuous(labels = scales::comma_format()) +
coord_flip() +
theme(
panel.grid.minor.y = element_blank(),
panel.grid.major.y = element_blank(),
legend.position="none"
) +
xlab("") +
labs(
y = "Muertes por Covid-19 cada 100.000 habitantes",
caption = caption);
graficoRanking <- grRank1 + grRank2;
graficoRanking
graficoRanking
datosparapie <- aggregate(deathsAcum ~ countriesAndTerritories + popData2018, data = datoscovidok, FUN = max);
datosparapie$cada100 <- datosparapie$deathsAcum / datosparapie$popData2018 * 100000;
library(RColorBrewer)
myPalette <- brewer.pal(NROW(datosparapie), "Set2");
datosparapie2 <- datosparapie[datosparapie$deathsAcum>300, ];
datosparapie2$countriesAndTerritories <- factor(datosparapie2$countriesAndTerritories, levels = datosparapie2$countriesAndTerritories[order(datosparapie2$deathsAcum)]);
#datosparapie2 <- datosparapie2[rev(order(datosparapie2$deathsAcum)), ];
grRank1 <- ggplot(data = datosparapie2,
mapping = aes(x=countriesAndTerritories, y=deathsAcum) ) +
geom_segment( aes(x=countriesAndTerritories ,xend=countriesAndTerritories, y=0, yend=deathsAcum), color="grey") +
geom_point(size=3, color="#69b3a2") +
geom_text(aes(y = deathsAcum, label = format(deathsAcum, big.mark = ".")), color="grey", size=3, nudge_y = 4000) +
scale_y_continuous(labels = scales::comma_format()) +
coord_flip() +
theme(
panel.grid.minor.y = element_blank(),
panel.grid.major.y = element_blank(),
legend.position="none"
) +
xlab("") +
labs(
y = "Muertes por Covid-19");
datosparapie2$countriesAndTerritories <- factor(datosparapie2$countriesAndTerritories, levels = datosparapie2$countriesAndTerritories[order(datosparapie2$cada100)]);
grRank2 <- ggplot(data = datosparapie2,
mapping = aes(x=countriesAndTerritories, y=deathsAcum / popData2018 * 100000) ) +
geom_segment( aes(x=countriesAndTerritories ,xend=countriesAndTerritories, y=0, yend=deathsAcum / popData2018 * 100000), color="grey") +
geom_point(size=3, color="#69b3a2") +
geom_text(aes(y = deathsAcum / popData2018 * 100000, label = format(deathsAcum, big.mark = ".")), color="grey", size=3, nudge_y = 4) +
scale_y_continuous(labels = scales::comma_format()) +
coord_flip() +
theme(
panel.grid.minor.y = element_blank(),
panel.grid.major.y = element_blank(),
legend.position="none"
) +
xlab("") +
labs(
y = "Muertes por Covid-19 cada 100.000 habitantes",
caption = caption);
graficoRanking <- grRank1 + grRank2;
graficoRanking
ggplot(
data = continente[continente$casesAcum > 1000, ],
mapping = aes(
x = casesAcum,
y = casesAcumSemana,
color = Group.2)) +
geom_line() +
scale_x_log10(labels = scales::comma_format()) +
scale_y_log10(labels = scales::comma_format()) +
theme(legend.position="bottom", legend.title  = element_blank()) +
labs(x = 'Casos confirmados', y = 'Casos semanales', caption = caption) +
coord_cartesian(ylim = c(1000, max(continente$casesAcumSemana)));
grafico11 <- ggplot(
data = continente[continente$casesAcum > 1000, ],
mapping = aes(
x = casesAcum,
y = casesAcumSemana,
color = Group.2)) +
geom_line() +
scale_x_log10(labels = scales::comma_format()) +
scale_y_log10(labels = scales::comma_format()) +
theme(legend.position="bottom", legend.title  = element_blank()) +
labs(x = 'Casos confirmados', y = 'Casos semanales', caption = caption) +
coord_cartesian(ylim = c(1000, max(continente$casesAcumSemana)));
grafico13 <- ggplot(
data = continente[continente$casesAcum > 1000, ],
mapping = aes(
x = casosAcumCada100Mil,
y = casosAcumSemanaCada100Mil,
color = Group.2)) +
geom_line() +
scale_x_log10(labels = scales::comma_format()) +
scale_y_log10(labels = scales::comma_format()) +
theme(legend.position="bottom", legend.title  = element_blank()) +
labs(x = 'Casos confirmados cada 100.000 habitantes', y = 'Casos semanales cada 100.000 habitantes', caption = caption);
grafico12 <- ggplot(
data = continente[continente$Group.1 < (as.Date(max(continente$Group.1)) - 2),],
mapping = aes(
x = Group.1,
y = deathsAcum,
color = Group.2)) +
geom_line() +
#geom_point() +
#scale_x_log10(labels =   scales::comma_format()) +
scale_y_continuous(labels = scales::comma_format()) +
theme(legend.position="bottom", legend.title  = element_blank()) +
labs(x = element_blank(), y = 'Muertes', caption = caption) +
coord_cartesian(xlim = c(as.Date('2020-03-01'), as.Date(max(continente$Group.1))));
grafico14 <- ggplot(
data = continente[continente$Group.1 < (as.Date(max(continente$Group.1)) - 2),],
mapping = aes(
x = Group.1,
y = deathsAcum / popData2018 * 100000,
color = Group.2)) +
geom_line() +
#geom_point() +
#scale_x_log10(labels =   scales::comma_format()) +
scale_y_continuous(labels = scales::comma_format()) +
theme(legend.position="bottom", legend.title  = element_blank()) +
labs(x = element_blank(), y = 'Muertes cada 100.000 habitantes', caption = caption) +
coord_cartesian(xlim = c(as.Date('2020-03-01'), as.Date(max(continente$Group.1))));
grafico12 <- grafico12 + scale_colour_manual(values = coloresContinente);
grafico11 <- grafico11 + scale_colour_manual(values = coloresContinente);
grafico13 <- grafico13 + scale_colour_manual(values = coloresContinente);
grafico14 <- grafico14 + scale_colour_manual(values = coloresContinente);
grafico12 <- grafico12 + labs(caption = element_blank());
grafico15 <- grafico12 + grafico14;
grafico12 <- grafico11 + labs(caption = element_blank());
grafico16 <- grafico11 + grafico13;
grafico16
install.packages('eph')
install.packages(c("png", "raster", "leaflet"))
install.packages('png')
install.packages('raster')
install.packages(c("backports", "broom", "data.table", "dbplyr", "dplyr", "ellipsis", "fs", "ggplot2", "glue", "htmltools", "httpuv", "httr", "isoband", "jsonlite", "knitr", "later", "lubridate", "modelr", "openssl", "patchwork", "pillar", "pkgbuild", "pkgload", "processx", "promises", "ps", "Rcpp", "rmarkdown", "scales", "shiny", "sys", "tibble", "tidyr", "tidyselect", "tinytex", "TTR", "withr", "xfun", "zoo"))
install.packages("eph")
install.packages('questionr')
version()
version
minsal <- read.csv(destfile);
library(tidyverse);
destfile <- "minsalCovid19Casos.csv";
minsal <- read.csv(destfile);
coviddia <- minsal %>%
filter(clasificacion_resumen == 'Confirmado' ) %>%
mutate(muerte = case_when(fallecido =='SI' ~ 1, TRUE ~ 0)) %>%
group_by(residencia_provincia_id, residencia_provincia_nombre, fecha_apertura) %>%
summarise(cases = n(),
deaths = sum(muerte));
coviddia %>%   group_by(residencia_provincia_nombre) %>% summarise(confirmados = n(), muertos = sum(deaths));
coviddia %>%   group_by(residencia_provincia_nombre) %>% summarise(confirmados = sum(cases), muertos = sum(deaths));
library(ggplot2);
ggplot(data = coviddia,
mapping = aes(x=fecha_apertura, y=cumsum(cases), color = residencia_provincia_nombre)) +
geom_line();
ggplot(data = filter(coviddia, residencia_provincia_nombre == 'CABA'),
mapping = aes(x=fecha_apertura, y=cumsum(cases))) +
geom_line()
soloCaba <- filter(coviddia, residencia_provincia_nombre == 'CABA');
ggplot(data = soloCaba
mapping = aes(x=fecha_apertura, y=cumsum(cases))) +
geom_line()
ggplot(data = soloCaba,
mapping = aes(x=fecha_apertura, y=cumsum(cases))) +
geom_line()
ggplot(data = soloCaba,
mapping = aes(x=fecha_apertura, y=cases)) +
geom_line()
ggplot(data = soloCaba,
mapping = aes(x=fecha_apertura, y=cases)) +
geom_line() +
geom_point();
ggplot(data = soloCaba,
mapping = aes(x=fecha_apertura, y=cases)) +
geom_point();
ggplot(data = soloCaba,
mapping = aes(x=fecha_apertura, y=cases)) +
geom_point() + geom_line();
ggplot(data = soloCaba,
mapping = aes(x=fecha_apertura, y=cases)) +
geom_point() + geom_line(aes(linetype = residencia_provincia_nombre));
ggplot(data = soloCaba,
mapping = aes(x=fecha_apertura, y=cases)) + geom_step():
asd
ggplot(data = soloCaba,
mapping = aes(x=fecha_apertura, y=cases)) + geom_step():
x<
asd
ggplot(data = soloCaba,
mapping = aes(x=fecha_apertura, y=cases)) +
geom_step();
ggplot(data = soloCaba,
mapping = aes(x=fecha_apertura, y=cases)))
ggplot(data = soloCaba,
mapping = aes(x=fecha_apertura, y=cases))
ggplot(data = soloCaba,
mapping = aes(x=fecha_apertura, y=cases)) + geom_point();
ggplot(data = soloCaba,
mapping = aes(x=fecha_apertura, y=cases)) + geom_point() + geom_line();
str(coviddia)
View(coviddia)
coviddia$realDate <- as.Date(coviddia$fecha_apertura);
str(coviddia)
ggplot(data = soloCaba,
mapping = aes(x=realDate, y=cases)) + geom_point() + geom_line();
oloCaba <- filter(coviddia, residencia_provincia_nombre == 'CABA');
ggplot(data = soloCaba,
mapping = aes(x=realDate, y=cases)) + geom_point() + geom_line();
soloCaba <- filter(coviddia, residencia_provincia_nombre == 'CABA');
ggplot(data = soloCaba,
mapping = aes(x=realDate, y=cases)) + geom_point() + geom_line();
ggplot(data = coviddia,
mapping = aes(x=realDate, y=cases, color = residencia_provincia_nombre)) + geom_line();
ggplot(data = soloCaba,
mapping = aes(x=realDate, y=cases, color = residencia_provincia_nombre)) + geom_line();
coviddia$casesAcum <- apply(coviddia, 1, function(x) sum(subset(coviddia, (residencia_provincia_id == x['residencia_provincia_id'] & realDate <= x['realDate']), select = 'cases')));
coviddia$casesAcumSemana <- apply(coviddia, 1, function(x) sum(subset(coviddia, (residencia_provincia_id == x['residencia_provincia_id'] & realDate <= x['realDate'] & realDate >= (as.Date(x['realDate'])-6) ), select = 'cases')));
coviddia$tasaDiaria <- ifelse(
coviddia$casesAcumSemana < 0,
NA,
ifelse(
coviddia$casesAcum - coviddia$casesAcumSemana == 0,
1,
with(coviddia, (casesAcum/(casesAcum - casesAcumSemana))^(1/7)-1)));
coviddia$diasDuplicar <- ifelse(coviddia$tasaDiaria == 0, NA, with(coviddia, log(2, tasaDiaria+1)));
#grafico mortalidad
coviddia$deathsAcum <- apply(coviddia, 1, function(x) sum(subset(coviddia, (residencia_provincia_id == x['residencia_provincia_id'] & realDate <= x['realDate']), select = 'deaths')));
coviddia$mortalidad <- coviddia$deathsAcum / coviddia$casesAcum;
coviddia$casesAcum <- apply(coviddia, 1, function(x) sum(subset(coviddia, (residencia_provincia_id == x['residencia_provincia_id'] & realDate <= x['realDate']), select = 'cases')));
str(coviddia)
View(coviddia)
coviddia$casesAcum <- apply(coviddia, 1, function(x) sum(subset(coviddia, (residencia_provincia_id == x['residencia_provincia_id'] & realDate <= x['realDate']), select = 'cases')));
subset(coviddia, (residencia_provincia_id == 1 & realDate <= as.Date('2020-09-01')), select = 'cases')
subset(coviddia, (residencia_provincia_id == 1 & realDate <= as.Date('2020-09-01')), select = 'cases')
subset(coviddia, (residencia_provincia_id == 1 & realDate <= '2020-09-01'), select = 'cases')
subset(coviddia, (residencia_provincia_id == 2 & realDate <= '2020-09-01'), select = 'cases')
sum(subset(coviddia, (residencia_provincia_id == 2 & realDate <= '2020-09-01'), select = 'cases'))
sum(subset(coviddia, (residencia_provincia_id == 2 & realDate <= '2020-09-01'), select = 'cases'))
sum(subset(coviddia, (residencia_provincia_id == 2 & realDate <= '2020-09-02'), select = 'cases'))
sum(subset(coviddia, (residencia_provincia_id == 2 & realDate <= '2020-09-03'), select = 'cases'))
coviddia$casesAcum <- apply(coviddia, 1, function(x) sum(subset(coviddia, (residencia_provincia_id == x['residencia_provincia_id'] & realDate <= x['realDate']), select = 'cases')));
test <- apply(coviddia, 1, function(x) sum(subset(coviddia, (residencia_provincia_id == x['residencia_provincia_id'] & realDate <= x['realDate']), select = 'cases')));
subset(coviddia, (residencia_provincia_id == 2 & realDate <= '2020-09-01'), select = 'cases')
test <- apply(coviddia, 1, function(x) 1);
test <- apply(coviddia, 1, function(x) sum(c(1, 2)));
test <- apply(coviddia, 1, function(x) sum(coviddia$cases));
test <- apply(coviddia, 1, function(x) sum(x['cases']));
View(coviddia)
str(coviddia)
test <- apply(coviddia, 1, function(x) sum(x));
coviddia$casesAcumSemana <- apply(coviddia, 1, function(x) sum(subset(coviddia, (residencia_provincia_id == x['residencia_provincia_id'] & realDate <= x['realDate'] & realDate >= (as.Date(x['realDate'])-6) ), select = 'cases')));
test <- apply(coviddia, 1, function(x) sum(x));
test <- apply(coviddia, 1, function(x) x['cases']);
test <- apply(coviddia, 1, function(x) as.integer(x['cases']));
coviddia$casesAcumSemana <- apply(coviddia, 1, function(x) sum(as.integer(subset(coviddia, (residencia_provincia_id == x['residencia_provincia_id'] & realDate <= x['realDate'] & realDate >= (as.Date(x['realDate'])-6) ), select = 'cases'))));
coviddia$cases <- as.integer(coviddia$cases);
coviddia$casesAcumSemana <- apply(coviddia, 1, function(x) sum(subset(coviddia, (residencia_provincia_id == x['residencia_provincia_id'] & realDate <= x['realDate'] & realDate >= (as.Date(x['realDate'])-6) ), select = 'cases')));
str(coviddia)
coviddia$cases <- as.numeric(coviddia$cases);
oviddia$casesAcumSemana <- apply(coviddia, 1, function(x) sum(subset(coviddia, (residencia_provincia_id == x['residencia_provincia_id'] & realDate <= x['realDate'] & realDate >= (as.Date(x['realDate'])-6) ), select = 'cases')));
#------------------------------------------------------------------
#------------------------------------------------------------------
sum(subset(coviddia, (residencia_provincia_id == 2 & realDate <= '2020-09-03'), select = 'cases'));
coviddia$casesAcum <- apply(coviddia, 1, function(x) sum(subset(coviddia, ( 1 == 1), select = 'cases')));
View(coviddia)
coviddia$casesAcum <- apply(coviddia, 1, function(x) sum(subset(coviddia, ( realDate >= as.Date(x['realDate'])), select = 'cases')));
coviddia$casesAcum <- apply(coviddia, 1, function(x) sum(subset(coviddia, ( residencia_provincia_id == 2 & realDate >= as.Date(x['realDate'])), select = 'cases')));
str(coviddia)
coviddia$casesAcum <- apply(coviddia, 1, function(x) sum(subset(coviddia, ( residencia_provincia_id == x['residencia_provincia_id'] & realDate >= as.Date(x['realDate'])), select = 'cases')));
coviddia$casesAcum <- apply(coviddia, 1, function(x) sum(subset(coviddia, ( residencia_provincia_nombre == x['residencia_provincia__nombre'] & realDate >= as.Date(x['realDate'])), select = 'cases')));
coviddia$casesAcum <- apply(coviddia, 1, function(x) sum(subset(coviddia, ( residencia_provincia_id == as.integer(x['residencia_provincia_id']) & realDate >= as.Date(x['realDate'])), select = 'cases')));
coviddia$casesAcumSemana <- apply(coviddia, 1, function(x) sum(subset(coviddia, (residencia_provincia_id == as.integer(x['residencia_provincia_id']) & realDate <= x['realDate'] & realDate >= (as.Date(x['realDate'])-6) ), select = 'cases')));
coviddia$tasaDiaria <- ifelse(
coviddia$casesAcumSemana < 0,
NA,
ifelse(
coviddia$casesAcum - coviddia$casesAcumSemana == 0,
1,
with(coviddia, (casesAcum/(casesAcum - casesAcumSemana))^(1/7)-1)));
coviddia$diasDuplicar <- ifelse(coviddia$tasaDiaria == 0, NA, with(coviddia, log(2, tasaDiaria+1)));
#grafico mortalidad
coviddia$deathsAcum <- apply(coviddia, 1, function(x) sum(subset(coviddia, (residencia_provincia_id == as.integer(x['residencia_provincia_id']) & realDate <= x['realDate']), select = 'deaths')));
coviddia$mortalidad <- coviddia$deathsAcum / coviddia$casesAcum;
View(coviddia)
ggplot(data = coviddia,
mapping = aes(x=realDate, y=casesAcum, color = residencia_provincia_nombre)) + geom_line();
coviddia$casesAcum <- apply(coviddia, 1, function(x) sum(subset(coviddia, ( residencia_provincia_id == as.integer(as.integer(x['residencia_provincia_id'])) & realDate <= as.Date(x['realDate'])), select = 'cases')));
coviddia$casesAcumSemana <- apply(coviddia, 1, function(x) sum(subset(coviddia, (residencia_provincia_id == as.integer(x['residencia_provincia_id']) & realDate <= x['realDate'] & realDate >= (as.Date(x['realDate'])-6) ), select = 'cases')));
coviddia$tasaDiaria <- ifelse(
coviddia$casesAcumSemana < 0,
NA,
ifelse(
coviddia$casesAcum - coviddia$casesAcumSemana == 0,
1,
with(coviddia, (casesAcum/(casesAcum - casesAcumSemana))^(1/7)-1)));
coviddia$diasDuplicar <- ifelse(coviddia$tasaDiaria == 0, NA, with(coviddia, log(2, tasaDiaria+1)));
#grafico mortalidad
coviddia$deathsAcum <- apply(coviddia, 1, function(x) sum(subset(coviddia, (residencia_provincia_id == as.integer(x['residencia_provincia_id']) & realDate <= x['realDate']), select = 'deaths')));
coviddia$mortalidad <- coviddia$deathsAcum / coviddia$casesAcum;
##---------------------------------------
ggplot(data = coviddia,
mapping = aes(x=realDate, y=casesAcum, color = residencia_provincia_nombre)) + geom_line();
source('~/covid/publica/fasecero.github.io/scripts/grafico10.r')
grArg +
geom_line(data = filter(coviddia, residencia_provincia_nombre == 'CABA'), aes(y = casesAcum, colour = 'CABA')) +
geom_line(data = filter(coviddia, residencia_provincia_nombre == 'CABA'), aes(y = tasaDiaria*factorSecundario, colour = 'Tasa diaria acumulariva ultimos 7 días (caba)')) +
geom_point(data = filter(coviddia, residencia_provincia_nombre == 'CABA'), aes(y=casesAcum, colour = 'CABA')) +
geom_point(data = filter(coviddia, residencia_provincia_nombre == 'CABA'), aes(y = tasaDiaria*factorSecundario, colour = 'Tasa diaria acumulariva ultimos 7 días (caba)'));
grArg +
geom_line(data = filter(coviddia, residencia_provincia_nombre == 'Casos'), aes(y = casesAcum, colour = 'Casos')) +
geom_line(data = filter(coviddia, residencia_provincia_nombre == 'Casos'), aes(y = tasaDiaria*factorSecundario, colour = 'Tasa diaria acumulariva ultimos 7 días (caba)')) +
geom_point(data = filter(coviddia, residencia_provincia_nombre == 'Casos'), aes(y=casesAcum, colour = 'Casos')) +
geom_point(data = filter(coviddia, residencia_provincia_nombre == 'Casos'), aes(y = tasaDiaria*factorSecundario, colour = 'Tasa diaria acumulariva ultimos 7 días (caba)'));
grArg +
geom_line(data = filter(coviddia, residencia_provincia_nombre == 'CABA'), aes(y = casesAcum, colour = 'Casos')) +
geom_line(data = filter(coviddia, residencia_provincia_nombre == 'CABA'), aes(y = tasaDiaria*factorSecundario, colour = 'Tasa diaria acumulariva ultimos 7 días (caba)')) +
geom_point(data = filter(coviddia, residencia_provincia_nombre == 'CABA'), aes(y=casesAcum, colour = 'Casos')) +
geom_point(data = filter(coviddia, residencia_provincia_nombre == 'CABA'), aes(y = tasaDiaria*factorSecundario, colour = 'Tasa diaria acumulariva ultimos 7 días (caba)'));
grArg +
geom_line(data = filter(coviddia, residencia_provincia_nombre == 'CABA'), aes(y = casesAcum, colour = 'Casos')) +
geom_line(data = filter(coviddia, residencia_provincia_nombre == 'CABA'), aes(y = tasaDiaria*factorSecundario, colour = 'Tasa diaria acumulariva ultimos 7 días')) +
geom_point(data = filter(coviddia, residencia_provincia_nombre == 'CABA'), aes(y=casesAcum, colour = 'Casos', shape=2)) +
geom_point(data = filter(coviddia, residencia_provincia_nombre == 'CABA'), aes(y = tasaDiaria*factorSecundario, colour = 'Tasa diaria acumulariva ultimos 7 días', shape=2));
grArg +
geom_line(data = filter(coviddia, residencia_provincia_nombre == 'CABA'), aes(y = casesAcum, colour = 'Casos')) +
geom_line(data = filter(coviddia, residencia_provincia_nombre == 'CABA'), aes(y = tasaDiaria*factorSecundario, colour = 'Tasa diaria acumulariva ultimos 7 días')) +
geom_point(data = filter(coviddia, residencia_provincia_nombre == 'CABA'), aes(y=casesAcum, colour = 'Casos'), shape=2) +
geom_point(data = filter(coviddia, residencia_provincia_nombre == 'CABA'), aes(y = tasaDiaria*factorSecundario, colour = 'Tasa diaria acumulariva ultimos 7 días'), shape=2);
grArgCab <- grArg +
geom_line(data = filter(coviddia, residencia_provincia_nombre == 'CABA'), aes(y = casesAcum, colour = 'Casos')) +
geom_line(data = filter(coviddia, residencia_provincia_nombre == 'CABA'), aes(y = tasaDiaria*factorSecundario, colour = 'Tasa diaria acumulariva ultimos 7 días')) +
geom_point(data = filter(coviddia, residencia_provincia_nombre == 'CABA'), aes(y=casesAcum, colour = 'Casos'), shape=2) +
geom_point(data = filter(coviddia, residencia_provincia_nombre == 'CABA'), aes(y = tasaDiaria*factorSecundario, colour = 'Tasa diaria acumulariva ultimos 7 días'), shape=2);
grArgCab <- grArg +
geom_line(data = filter(coviddia, residencia_provincia_nombre == 'CABA'), aes(y = casesAcum, colour = 'Casos')) +
geom_line(data = filter(coviddia, residencia_provincia_nombre == 'CABA'), aes(y = tasaDiaria*factorSecundario, colour = 'Tasa diaria acumulariva ultimos 7 días')) +
geom_point(data = filter(coviddia, residencia_provincia_nombre == 'CABA'), aes(y=casesAcum, colour = 'Casos'), shape=17) +
geom_point(data = filter(coviddia, residencia_provincia_nombre == 'CABA'), aes(y = tasaDiaria*factorSecundario, colour = 'Tasa diaria acumulariva ultimos 7 días'), shape=17);
grArgCab +
geom_line(data = filter(coviddia, residencia_provincia_nombre == 'Buenos Aires'), aes(y = casesAcum, colour = 'Casos')) +
geom_line(data = filter(coviddia, residencia_provincia_nombre == 'Buenos Aires'), aes(y = tasaDiaria*factorSecundario, colour = 'Tasa diaria acumulariva ultimos 7 días')) +
geom_point(data = filter(coviddia, residencia_provincia_nombre == 'Buenos Aires'), aes(y=casesAcum, colour = 'Casos'), shape=18) +
geom_point(data = filter(coviddia, residencia_provincia_nombre == 'Buenos Aires'), aes(y = tasaDiaria*factorSecundario, colour = 'Tasa diaria acumulariva ultimos 7 días'), shape=18);
##---------------------------------------
ggplot(data = coviddia,
mapping = aes(x=realDate, y=tasaDiaria, color = residencia_provincia_nombre)) + geom_line();
----
ggplot(data = coviddia,
mapping = aes(x=realDate, y=tasaDiaria, color = residencia_provincia_nombre)) + geom_line() +
coord_cartesian(ylim = c(0, 0.25));
ggplot(data = coviddia,
mapping = aes(x=realDate, y=tasaDiaria, color = residencia_provincia_nombre)) + geom_line() +
coord_cartesian(xlim = c(as.Date('2020-03-15'), max(ultimaFecha)), ylim = c(0, 0.25));
grArgCab <- grArg +
geom_line(data = filter(coviddia, residencia_provincia_nombre == 'CABA'), aes(y = casesAcum, colour = 'Casos')) +
geom_line(data = filter(coviddia, residencia_provincia_nombre == 'CABA'), aes(y = tasaDiaria*factorSecundario, colour = 'Tasa diaria acumulariva ultimos 7 días')) +
geom_point(data = filter(coviddia, residencia_provincia_nombre == 'CABA'), aes(y=casesAcum, colour = 'Casos'), shape=17) +
geom_point(data = filter(coviddia, residencia_provincia_nombre == 'CABA'), aes(y = tasaDiaria*factorSecundario, colour = 'Tasa diaria acumulariva ultimos 7 días'), shape=17);
grCabArgBue <- grArgCab +
geom_line(data = filter(coviddia, residencia_provincia_nombre == 'Buenos Aires'), aes(y = casesAcum, colour = 'Casos')) +
geom_line(data = filter(coviddia, residencia_provincia_nombre == 'Buenos Aires'), aes(y = tasaDiaria*factorSecundario, colour = 'Tasa diaria acumulariva ultimos 7 días')) +
geom_point(data = filter(coviddia, residencia_provincia_nombre == 'Buenos Aires'), aes(y=casesAcum, colour = 'Casos'), shape=18) +
geom_point(data = filter(coviddia, residencia_provincia_nombre == 'Buenos Aires'), aes(y = tasaDiaria*factorSecundario, colour = 'Tasa diaria acumulariva ultimos 7 días'), shape=18);
grCabArgBue
ggplot(
data = datoscovidok[datoscovidok$countriesAndTerritories == 'Argentina',],
mapping = aes(
x = realDate
)) +
geom_line(aes(y = casesAcum, colour = 'Argentina'), linetype = 'dashed') +
geom_line(aes(y = tasaDiaria*factorSecundario, colour = 'Argentina'), linetype = 'solid') +
geom_point(aes(y=casesAcum, colour = 'Argentina'), shape=16) +
geom_point(aes(y = tasaDiaria*factorSecundario, colour = 'Argentina'), shape=17) +
scale_y_continuous(sec.axis = sec_axis(~./factorSecundario, name = "Tasa", labels = scales::percent_format(accuracy = 1)), labels = scales::comma_format()) +
theme(
legend.position="bottom",
legend.title  = element_blank()) +
labs(y = 'Casos confirmados', x = element_blank(), title = "Casos confirmados y tasa diara de crecimiento Argentina", caption = caption) +
coord_cartesian(xlim = c(as.Date('2020-03-15'), max(ultimaFecha)), ylim = c(0, max(datoscovidok[datoscovidok$countriesAndTerritories == 'Argentina', c('casesAcum')])));
ggplot(
data = datoscovidok[datoscovidok$countriesAndTerritories == 'Argentina',],
mapping = aes(
x = realDate
)) +
geom_line(aes(y = casesAcum, colour = 'Argentina'), linetype = 'dashed') +
geom_line(aes(y = tasaDiaria*factorSecundario, colour = 'Argentina'), linetype = 'solid') +
#geom_point(aes(y=casesAcum, colour = 'Argentina'), shape=16) +
geom_point(aes(y = tasaDiaria*factorSecundario, colour = 'Argentina'), shape=17) +
scale_y_continuous(sec.axis = sec_axis(~./factorSecundario, name = "Tasa", labels = scales::percent_format(accuracy = 1)), labels = scales::comma_format()) +
theme(
legend.position="bottom",
legend.title  = element_blank()) +
labs(y = 'Casos confirmados', x = element_blank(), title = "Casos confirmados y tasa diara de crecimiento Argentina", caption = caption) +
coord_cartesian(xlim = c(as.Date('2020-03-15'), max(ultimaFecha)), ylim = c(0, max(datoscovidok[datoscovidok$countriesAndTerritories == 'Argentina', c('casesAcum')])));
grArg <- ggplot(
data = datoscovidok[datoscovidok$countriesAndTerritories == 'Argentina',],
mapping = aes(
x = realDate
)) +
geom_line(aes(y = casesAcum, colour = 'Argentina'), linetype = 'dashed') +
geom_line(aes(y = tasaDiaria*factorSecundario, colour = 'Argentina'), linetype = 'solid') +
#geom_point(aes(y=casesAcum, colour = 'Argentina'), shape=16) +
geom_point(aes(y = tasaDiaria*factorSecundario, colour = 'Argentina'), shape=17) +
scale_y_continuous(sec.axis = sec_axis(~./factorSecundario, name = "Tasa", labels = scales::percent_format(accuracy = 1)), labels = scales::comma_format()) +
theme(
legend.position="bottom",
legend.title  = element_blank()) +
labs(y = 'Casos confirmados', x = element_blank(), title = "Casos confirmados y tasa diara de crecimiento Argentina", caption = caption) +
coord_cartesian(xlim = c(as.Date('2020-03-15'), max(ultimaFecha)), ylim = c(0, max(datoscovidok[datoscovidok$countriesAndTerritories == 'Argentina', c('casesAcum')])));
grArgCab <- grArg +
geom_line(data = filter(coviddia, residencia_provincia_nombre == 'CABA'), aes(y = casesAcum, colour = 'CABA'), linetype = 'dashed') +
geom_line(data = filter(coviddia, residencia_provincia_nombre == 'CABA'), aes(y = tasaDiaria*factorSecundario, colour = 'Tasa diaria acumulariva ultimos 7 días')) +
#geom_point(data = filter(coviddia, residencia_provincia_nombre == 'CABA'), aes(y=casesAcum, colour = 'Casos'), shape=17) +
geom_point(data = filter(coviddia, residencia_provincia_nombre == 'CABA'), aes(y = tasaDiaria*factorSecundario, colour = 'CABA'), shape=17);
grCabArgBue <- grArgCab +
geom_line(data = filter(coviddia, residencia_provincia_nombre == 'Buenos Aires'), aes(y = casesAcum, colour = 'Buenos Aires'), linetype = 'dashed') +
geom_line(data = filter(coviddia, residencia_provincia_nombre == 'Buenos Aires'), aes(y = tasaDiaria*factorSecundario, colour = 'Buenos Aires')) +
#geom_point(data = filter(coviddia, residencia_provincia_nombre == 'Buenos Aires'), aes(y=casesAcum, colour = 'Casos'), shape=18) +
geom_point(data = filter(coviddia, residencia_provincia_nombre == 'Buenos Aires'), aes(y = tasaDiaria*factorSecundario, colour = 'Buenos Aires'), shape=17);
grCabArgBue
grArg <- ggplot(
data = datoscovidok[datoscovidok$countriesAndTerritories == 'Argentina',],
mapping = aes(
x = realDate
)) +
geom_line(aes(y = casesAcum, colour = 'Argentina'), linetype = 'dashed') +
geom_line(aes(y = tasaDiaria*factorSecundario, colour = 'Argentina'), linetype = 'solid') +
#geom_point(aes(y=casesAcum, colour = 'Argentina'), shape=16) +
geom_point(aes(y = tasaDiaria*factorSecundario, colour = 'Argentina'), shape=17) +
scale_y_continuous(sec.axis = sec_axis(~./factorSecundario, name = "Tasa", labels = scales::percent_format(accuracy = 1)), labels = scales::comma_format()) +
theme(
legend.position="bottom",
legend.title  = element_blank()) +
labs(y = 'Casos confirmados', x = element_blank(), title = "Casos confirmados y tasa diara de crecimiento Argentina", caption = caption) +
coord_cartesian(xlim = c(as.Date('2020-03-15'), max(ultimaFecha)), ylim = c(0, max(datoscovidok[datoscovidok$countriesAndTerritories == 'Argentina', c('casesAcum')])));
grArgCab <- grArg +
geom_line(data = filter(coviddia, residencia_provincia_nombre == 'CABA'), aes(y = casesAcum, colour = 'CABA'), linetype = 'dashed') +
geom_line(data = filter(coviddia, residencia_provincia_nombre == 'CABA'), aes(y = tasaDiaria*factorSecundario, colour = 'CABA')) +
#geom_point(data = filter(coviddia, residencia_provincia_nombre == 'CABA'), aes(y=casesAcum, colour = 'Casos'), shape=17) +
geom_point(data = filter(coviddia, residencia_provincia_nombre == 'CABA'), aes(y = tasaDiaria*factorSecundario, colour = 'CABA'), shape=17);
grCabArgBue <- grArgCab +
geom_line(data = filter(coviddia, residencia_provincia_nombre == 'Buenos Aires'), aes(y = casesAcum, colour = 'Buenos Aires'), linetype = 'dashed') +
geom_line(data = filter(coviddia, residencia_provincia_nombre == 'Buenos Aires'), aes(y = tasaDiaria*factorSecundario, colour = 'Buenos Aires')) +
#geom_point(data = filter(coviddia, residencia_provincia_nombre == 'Buenos Aires'), aes(y=casesAcum, colour = 'Casos'), shape=18) +
geom_point(data = filter(coviddia, residencia_provincia_nombre == 'Buenos Aires'), aes(y = tasaDiaria*factorSecundario, colour = 'Buenos Aires'), shape=17);
grCabArgBue
