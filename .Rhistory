coord_flip() +
theme(
panel.grid.minor.y = element_blank(),
panel.grid.major.y = element_blank(),
legend.position="none"
) +
xlab("") +
ylab("Weapon quantity (SIPRI trend-indicator value)");
ggplot(data = datosparapie2,
mapping = aes(x=countriesAndTerritories, y=deathsAcum) ) +
geom_segment( aes(x=countriesAndTerritories ,xend=countriesAndTerritories, y=0, yend=deathsAcum), color="grey") +
geom_point(size=3, color="#69b3a2") +
geom_text(aes(y = deathsAcum, label = sprintf("%d", deathsAcum)), color="grey", size=3, nudge_y = 4500) +
coord_flip() +
theme(
panel.grid.minor.y = element_blank(),
panel.grid.major.y = element_blank(),
legend.position="none"
) +
xlab("") +
ylab("Weapon quantity (SIPRI trend-indicator value)");
ggplot(data = datosparapie2,
mapping = aes(x=countriesAndTerritories, y=deathsAcum) ) +
geom_segment( aes(x=countriesAndTerritories ,xend=countriesAndTerritories, y=0, yend=deathsAcum), color="grey") +
geom_point(size=3, color="#69b3a2") +
geom_text(aes(y = deathsAcum, label = sprintf("%d", deathsAcum)), color="grey", size=3, nudge_y = 3500) +
coord_flip() +
theme(
panel.grid.minor.y = element_blank(),
panel.grid.major.y = element_blank(),
legend.position="none"
) +
xlab("") +
ylab("Weapon quantity (SIPRI trend-indicator value)");
ggplot(data = datosparapie2,
mapping = aes(x=countriesAndTerritories, y=deathsAcum) ) +
geom_segment( aes(x=countriesAndTerritories ,xend=countriesAndTerritories, y=0, yend=deathsAcum), color="grey") +
geom_point(size=3, color="#69b3a2") +
geom_text(aes(y = deathsAcum, label = sprintf("%d.2", deathsAcum)), color="grey", size=3, nudge_y = 3500) +
coord_flip() +
theme(
panel.grid.minor.y = element_blank(),
panel.grid.major.y = element_blank(),
legend.position="none"
) +
xlab("") +
ylab("Weapon quantity (SIPRI trend-indicator value)");
ggplot(data = datosparapie2,
mapping = aes(x=countriesAndTerritories, y=deathsAcum) ) +
geom_segment( aes(x=countriesAndTerritories ,xend=countriesAndTerritories, y=0, yend=deathsAcum), color="grey") +
geom_point(size=3, color="#69b3a2") +
geom_text(aes(y = deathsAcum, label = format(deathsAcum, big.mark = ".")), color="grey", size=3, nudge_y = 3500) +
coord_flip() +
theme(
panel.grid.minor.y = element_blank(),
panel.grid.major.y = element_blank(),
legend.position="none"
) +
xlab("") +
ylab("Weapon quantity (SIPRI trend-indicator value)");
ggplot(data = datosparapie2,
mapping = aes(x=countriesAndTerritories, y=deathsAcum) ) +
geom_segment( aes(x=countriesAndTerritories ,xend=countriesAndTerritories, y=0, yend=deathsAcum), color="grey") +
geom_point(size=3, color="#69b3a2") +
geom_text(aes(y = deathsAcum, label = format(deathsAcum, big.mark = ".")), color="grey", size=3, nudge_y = 3500) +
scale_x_continuous(labels = scales::comma_format()) +
coord_flip() +
theme(
panel.grid.minor.y = element_blank(),
panel.grid.major.y = element_blank(),
legend.position="none"
) +
xlab("") +
ylab("Weapon quantity (SIPRI trend-indicator value)");
ggplot(data = datosparapie2,
mapping = aes(x=countriesAndTerritories, y=deathsAcum) ) +
geom_segment( aes(x=countriesAndTerritories ,xend=countriesAndTerritories, y=0, yend=deathsAcum), color="grey") +
geom_point(size=3, color="#69b3a2") +
geom_text(aes(y = deathsAcum, label = format(deathsAcum, big.mark = ".")), color="grey", size=3, nudge_y = 3500) +
scale_y_continuous(labels = scales::comma_format()) +
coord_flip() +
theme(
panel.grid.minor.y = element_blank(),
panel.grid.major.y = element_blank(),
legend.position="none"
) +
xlab("") +
ylab("Weapon quantity (SIPRI trend-indicator value)");
View(datoscovidok)
datosparapie <- aggregate(list(deathsAcum, popData2018) ~ countriesAndTerritories, data = datoscovidok, FUN = max);
datosparapie <- aggregate(deathsAcum + popData2018 ~ countriesAndTerritories, data = datoscovidok, FUN = max);
View(datosparapie)
datosparapie <- aggregate(c(deathsAcum, popData2018) ~ countriesAndTerritories, data = datoscovidok, FUN = max);
datosparapie <- aggregate(list(deathsAcum ~ countriesAndTerritories + popData2018, data = datoscovidok, FUN = max);
datosparapie <- aggregate(deathsAcum ~ countriesAndTerritories + popData2018, data = datoscovidok, FUN = max);
View(datosparapie)
ggplot(data = datosparapie2,
mapping = aes(x=countriesAndTerritories, y=deathsAcum / popData2018 * 100000) ) +
geom_segment( aes(x=countriesAndTerritories ,xend=countriesAndTerritories, y=0, yend=deathsAcum), color="grey") +
geom_point(size=3, color="#69b3a2") +
geom_text(aes(y = deathsAcum, label = format(deathsAcum, big.mark = ".")), color="grey", size=3, nudge_y = 3500) +
scale_y_continuous(labels = scales::comma_format()) +
coord_flip() +
theme(
panel.grid.minor.y = element_blank(),
panel.grid.major.y = element_blank(),
legend.position="none"
) +
xlab("") +
ylab("Weapon quantity (SIPRI trend-indicator value)");
datosparapie <- aggregate(deathsAcum ~ countriesAndTerritories + popData2018, data = datoscovidok, FUN = max);
library(RColorBrewer)
myPalette <- brewer.pal(NROW(datosparapie), "Set2");
datosparapie2 <- datosparapie[datosparapie$deathsAcum>200, ];
datosparapie2$countriesAndTerritories <- factor(datosparapie2$countriesAndTerritories, levels = datosparapie2$countriesAndTerritories[order(datosparapie2$deathsAcum)]);
#datosparapie2 <- datosparapie2[rev(order(datosparapie2$deathsAcum)), ];
ggplot(data = datosparapie2,
mapping = aes(x=countriesAndTerritories, y=deathsAcum / popData2018 * 100000) ) +
geom_segment( aes(x=countriesAndTerritories ,xend=countriesAndTerritories, y=0, yend=deathsAcum), color="grey") +
geom_point(size=3, color="#69b3a2") +
geom_text(aes(y = deathsAcum, label = format(deathsAcum, big.mark = ".")), color="grey", size=3, nudge_y = 3500) +
scale_y_continuous(labels = scales::comma_format()) +
coord_flip() +
theme(
panel.grid.minor.y = element_blank(),
panel.grid.major.y = element_blank(),
legend.position="none"
) +
xlab("") +
ylab("Weapon quantity (SIPRI trend-indicator value)");
ggplot(data = datosparapie2,
mapping = aes(x=countriesAndTerritories, y=deathsAcum / popData2018 * 100000) ) +
geom_segment( aes(x=countriesAndTerritories ,xend=countriesAndTerritories, y=0, yend=deathsAcum / popData2018 * 100000), color="grey") +
geom_point(size=3, color="#69b3a2") +
geom_text(aes(y = deathsAcum / popData2018 * 100000, label = format(deathsAcum, big.mark = ".")), color="grey", size=3, nudge_y = 3500) +
scale_y_continuous(labels = scales::comma_format()) +
coord_flip() +
theme(
panel.grid.minor.y = element_blank(),
panel.grid.major.y = element_blank(),
legend.position="none"
) +
xlab("") +
ylab("Weapon quantity (SIPRI trend-indicator value)");
ggplot(data = datosparapie2,
mapping = aes(x=countriesAndTerritories, y=deathsAcum / popData2018 * 100000) ) +
geom_segment( aes(x=countriesAndTerritories ,xend=countriesAndTerritories, y=0, yend=deathsAcum / popData2018 * 100000), color="grey") +
geom_point(size=3, color="#69b3a2") +
geom_text(aes(y = deathsAcum / popData2018 * 100000, label = format(deathsAcum, big.mark = ".")), color="grey", size=3, nudge_y = 0) +
scale_y_continuous(labels = scales::comma_format()) +
coord_flip() +
theme(
panel.grid.minor.y = element_blank(),
panel.grid.major.y = element_blank(),
legend.position="none"
) +
xlab("") +
ylab("Weapon quantity (SIPRI trend-indicator value)");
datosparapie <- aggregate(deathsAcum ~ countriesAndTerritories + popData2018, data = datoscovidok, FUN = max);
datosparapie$cada100 <- datosparapie$deathsAcum / datosparapie$popData2018 * 100000;
library(RColorBrewer)
myPalette <- brewer.pal(NROW(datosparapie), "Set2");
datosparapie2 <- datosparapie[datosparapie$deathsAcum>200, ];
datosparapie2$countriesAndTerritories <- factor(datosparapie2$countriesAndTerritories, levels = datosparapie2$countriesAndTerritories[order(datosparapie2$deathsAcum)]);
#datosparapie2 <- datosparapie2[rev(order(datosparapie2$deathsAcum)), ];
grRank1 <- ggplot(data = datosparapie2,
mapping = aes(x=countriesAndTerritories, y=deathsAcum) ) +
geom_segment( aes(x=countriesAndTerritories ,xend=countriesAndTerritories, y=0, yend=deathsAcum), color="grey") +
geom_point(size=3, color="#69b3a2") +
geom_text(aes(y = deathsAcum, label = format(deathsAcum, big.mark = ".")), color="grey", size=3, nudge_y = 3500) +
scale_y_continuous(labels = scales::comma_format()) +
coord_flip() +
theme(
panel.grid.minor.y = element_blank(),
panel.grid.major.y = element_blank(),
legend.position="none"
) +
xlab("");
datosparapie2$countriesAndTerritories <- factor(datosparapie2$countriesAndTerritories, levels = datosparapie2$countriesAndTerritories[order(datosparapie2$cada100)]);
ggplot(data = datosparapie2,
mapping = aes(x=countriesAndTerritories, y=deathsAcum / popData2018 * 100000) ) +
geom_segment( aes(x=countriesAndTerritories ,xend=countriesAndTerritories, y=0, yend=deathsAcum / popData2018 * 100000), color="grey") +
geom_point(size=3, color="#69b3a2") +
geom_text(aes(y = deathsAcum / popData2018 * 100000, label = format(deathsAcum, big.mark = ".")), color="grey", size=3, nudge_y = 0) +
scale_y_continuous(labels = scales::comma_format()) +
coord_flip() +
theme(
panel.grid.minor.y = element_blank(),
panel.grid.major.y = element_blank(),
legend.position="none"
) +
xlab("") +
ylab("Weapon quantity (SIPRI trend-indicator value)");
ggplot(data = datosparapie2,
mapping = aes(x=countriesAndTerritories, y=deathsAcum / popData2018 * 100000) ) +
geom_segment( aes(x=countriesAndTerritories ,xend=countriesAndTerritories, y=0, yend=deathsAcum / popData2018 * 100000), color="grey") +
geom_point(size=3, color="#69b3a2") +
geom_text(aes(y = deathsAcum / popData2018 * 100000, label = format(deathsAcum, big.mark = ".")), color="grey", size=3, nudge_y = 100) +
scale_y_continuous(labels = scales::comma_format()) +
coord_flip() +
theme(
panel.grid.minor.y = element_blank(),
panel.grid.major.y = element_blank(),
legend.position="none"
) +
xlab("") +
ylab("Weapon quantity (SIPRI trend-indicator value)");
ggplot(data = datosparapie2,
mapping = aes(x=countriesAndTerritories, y=deathsAcum / popData2018 * 100000) ) +
geom_segment( aes(x=countriesAndTerritories ,xend=countriesAndTerritories, y=0, yend=deathsAcum / popData2018 * 100000), color="grey") +
geom_point(size=3, color="#69b3a2") +
geom_text(aes(y = deathsAcum / popData2018 * 100000, label = format(deathsAcum, big.mark = ".")), color="grey", size=3, nudge_y = 10) +
scale_y_continuous(labels = scales::comma_format()) +
coord_flip() +
theme(
panel.grid.minor.y = element_blank(),
panel.grid.major.y = element_blank(),
legend.position="none"
) +
xlab("") +
ylab("Weapon quantity (SIPRI trend-indicator value)");
ggplot(data = datosparapie2,
mapping = aes(x=countriesAndTerritories, y=deathsAcum / popData2018 * 100000) ) +
geom_segment( aes(x=countriesAndTerritories ,xend=countriesAndTerritories, y=0, yend=deathsAcum / popData2018 * 100000), color="grey") +
geom_point(size=3, color="#69b3a2") +
geom_text(aes(y = deathsAcum / popData2018 * 100000, label = format(deathsAcum, big.mark = ".")), color="grey", size=3, nudge_y = 3) +
scale_y_continuous(labels = scales::comma_format()) +
coord_flip() +
theme(
panel.grid.minor.y = element_blank(),
panel.grid.major.y = element_blank(),
legend.position="none"
) +
xlab("") +
ylab("Weapon quantity (SIPRI trend-indicator value)");
ggplot(data = datosparapie2,
mapping = aes(x=countriesAndTerritories, y=deathsAcum / popData2018 * 100000) ) +
geom_segment( aes(x=countriesAndTerritories ,xend=countriesAndTerritories, y=0, yend=deathsAcum / popData2018 * 100000), color="grey") +
geom_point(size=3, color="#69b3a2") +
geom_text(aes(y = deathsAcum / popData2018 * 100000, label = format(deathsAcum, big.mark = ".")), color="grey", size=3, nudge_y = 3) +
scale_y_continuous(labels = scales::comma_format()) +
coord_flip() +
theme(
panel.grid.minor.y = element_blank(),
panel.grid.major.y = element_blank(),
legend.position="none"
) +
xlab("") +
labs(
y = "Muertes por Covid-19",
caption = caption);
datosparapie <- aggregate(deathsAcum ~ countriesAndTerritories + popData2018, data = datoscovidok, FUN = max);
datosparapie$cada100 <- datosparapie$deathsAcum / datosparapie$popData2018 * 100000;
library(RColorBrewer)
myPalette <- brewer.pal(NROW(datosparapie), "Set2");
datosparapie2 <- datosparapie[datosparapie$deathsAcum>200, ];
datosparapie2$countriesAndTerritories <- factor(datosparapie2$countriesAndTerritories, levels = datosparapie2$countriesAndTerritories[order(datosparapie2$deathsAcum)]);
#datosparapie2 <- datosparapie2[rev(order(datosparapie2$deathsAcum)), ];
grRank1 <- ggplot(data = datosparapie2,
mapping = aes(x=countriesAndTerritories, y=deathsAcum) ) +
geom_segment( aes(x=countriesAndTerritories ,xend=countriesAndTerritories, y=0, yend=deathsAcum), color="grey") +
geom_point(size=3, color="#69b3a2") +
geom_text(aes(y = deathsAcum, label = format(deathsAcum, big.mark = ".")), color="grey", size=3, nudge_y = 3500) +
scale_y_continuous(labels = scales::comma_format()) +
coord_flip() +
theme(
panel.grid.minor.y = element_blank(),
panel.grid.major.y = element_blank(),
legend.position="none"
) +
xlab("");
datosparapie2$countriesAndTerritories <- factor(datosparapie2$countriesAndTerritories, levels = datosparapie2$countriesAndTerritories[order(datosparapie2$cada100)]);
grRank2 <- ggplot(data = datosparapie2,
mapping = aes(x=countriesAndTerritories, y=deathsAcum / popData2018 * 100000) ) +
geom_segment( aes(x=countriesAndTerritories ,xend=countriesAndTerritories, y=0, yend=deathsAcum / popData2018 * 100000), color="grey") +
geom_point(size=3, color="#69b3a2") +
geom_text(aes(y = deathsAcum / popData2018 * 100000, label = format(deathsAcum, big.mark = ".")), color="grey", size=3, nudge_y = 3) +
scale_y_continuous(labels = scales::comma_format()) +
coord_flip() +
theme(
panel.grid.minor.y = element_blank(),
panel.grid.major.y = element_blank(),
legend.position="none"
) +
xlab("") +
labs(
y = "Muertes por Covid-19",
caption = caption);
graficoRanking <- grRank1 + grRank2;
graficoRanking
atosparapie <- aggregate(deathsAcum ~ countriesAndTerritories + popData2018, data = datoscovidok, FUN = max);
datosparapie$cada100 <- datosparapie$deathsAcum / datosparapie$popData2018 * 100000;
library(RColorBrewer)
myPalette <- brewer.pal(NROW(datosparapie), "Set2");
datosparapie2 <- datosparapie[datosparapie$deathsAcum>300, ];
datosparapie2$countriesAndTerritories <- factor(datosparapie2$countriesAndTerritories, levels = datosparapie2$countriesAndTerritories[order(datosparapie2$deathsAcum)]);
#datosparapie2 <- datosparapie2[rev(order(datosparapie2$deathsAcum)), ];
grRank1 <- ggplot(data = datosparapie2,
mapping = aes(x=countriesAndTerritories, y=deathsAcum) ) +
geom_segment( aes(x=countriesAndTerritories ,xend=countriesAndTerritories, y=0, yend=deathsAcum), color="grey") +
geom_point(size=3, color="#69b3a2") +
geom_text(aes(y = deathsAcum, label = format(deathsAcum, big.mark = ".")), color="grey", size=3, nudge_y = 3500) +
scale_y_continuous(labels = scales::comma_format()) +
coord_flip() +
theme(
panel.grid.minor.y = element_blank(),
panel.grid.major.y = element_blank(),
legend.position="none"
) +
xlab("");
datosparapie2$countriesAndTerritories <- factor(datosparapie2$countriesAndTerritories, levels = datosparapie2$countriesAndTerritories[order(datosparapie2$cada100)]);
grRank2 <- ggplot(data = datosparapie2,
mapping = aes(x=countriesAndTerritories, y=deathsAcum / popData2018 * 100000) ) +
geom_segment( aes(x=countriesAndTerritories ,xend=countriesAndTerritories, y=0, yend=deathsAcum / popData2018 * 100000), color="grey") +
geom_point(size=3, color="#69b3a2") +
geom_text(aes(y = deathsAcum / popData2018 * 100000, label = format(deathsAcum, big.mark = ".")), color="grey", size=3, nudge_y = 3) +
scale_y_continuous(labels = scales::comma_format()) +
coord_flip() +
theme(
panel.grid.minor.y = element_blank(),
panel.grid.major.y = element_blank(),
legend.position="none"
) +
xlab("") +
labs(
y = "Muertes por Covid-19",
caption = caption);
graficoRanking <- grRank1 + grRank2;
datosparapie <- aggregate(deathsAcum ~ countriesAndTerritories + popData2018, data = datoscovidok, FUN = max);
datosparapie$cada100 <- datosparapie$deathsAcum / datosparapie$popData2018 * 100000;
library(RColorBrewer)
myPalette <- brewer.pal(NROW(datosparapie), "Set2");
datosparapie2 <- datosparapie[datosparapie$deathsAcum>300, ];
datosparapie2$countriesAndTerritories <- factor(datosparapie2$countriesAndTerritories, levels = datosparapie2$countriesAndTerritories[order(datosparapie2$deathsAcum)]);
#datosparapie2 <- datosparapie2[rev(order(datosparapie2$deathsAcum)), ];
grRank1 <- ggplot(data = datosparapie2,
mapping = aes(x=countriesAndTerritories, y=deathsAcum) ) +
geom_segment( aes(x=countriesAndTerritories ,xend=countriesAndTerritories, y=0, yend=deathsAcum), color="grey") +
geom_point(size=3, color="#69b3a2") +
geom_text(aes(y = deathsAcum, label = format(deathsAcum, big.mark = ".")), color="grey", size=3, nudge_y = 4000) +
scale_y_continuous(labels = scales::comma_format()) +
coord_flip() +
theme(
panel.grid.minor.y = element_blank(),
panel.grid.major.y = element_blank(),
legend.position="none"
) +
xlab("") +
labs(
y = "Muertes por Covid-19 cada 100.000 habitantes");
datosparapie2$countriesAndTerritories <- factor(datosparapie2$countriesAndTerritories, levels = datosparapie2$countriesAndTerritories[order(datosparapie2$cada100)]);
grRank2 <- ggplot(data = datosparapie2,
mapping = aes(x=countriesAndTerritories, y=deathsAcum / popData2018 * 100000) ) +
geom_segment( aes(x=countriesAndTerritories ,xend=countriesAndTerritories, y=0, yend=deathsAcum / popData2018 * 100000), color="grey") +
geom_point(size=3, color="#69b3a2") +
geom_text(aes(y = deathsAcum / popData2018 * 100000, label = format(deathsAcum, big.mark = ".")), color="grey", size=3, nudge_y = 4) +
scale_y_continuous(labels = scales::comma_format()) +
coord_flip() +
theme(
panel.grid.minor.y = element_blank(),
panel.grid.major.y = element_blank(),
legend.position="none"
) +
xlab("") +
labs(
y = "Muertes por Covid-19 cada 100.000 habitantes",
caption = caption);
graficoRanking <- grRank1 + grRank2;
graficoRanking
graficoRanking
datosparapie <- aggregate(deathsAcum ~ countriesAndTerritories + popData2018, data = datoscovidok, FUN = max);
datosparapie$cada100 <- datosparapie$deathsAcum / datosparapie$popData2018 * 100000;
library(RColorBrewer)
myPalette <- brewer.pal(NROW(datosparapie), "Set2");
datosparapie2 <- datosparapie[datosparapie$deathsAcum>300, ];
datosparapie2$countriesAndTerritories <- factor(datosparapie2$countriesAndTerritories, levels = datosparapie2$countriesAndTerritories[order(datosparapie2$deathsAcum)]);
#datosparapie2 <- datosparapie2[rev(order(datosparapie2$deathsAcum)), ];
grRank1 <- ggplot(data = datosparapie2,
mapping = aes(x=countriesAndTerritories, y=deathsAcum) ) +
geom_segment( aes(x=countriesAndTerritories ,xend=countriesAndTerritories, y=0, yend=deathsAcum), color="grey") +
geom_point(size=3, color="#69b3a2") +
geom_text(aes(y = deathsAcum, label = format(deathsAcum, big.mark = ".")), color="grey", size=3, nudge_y = 4000) +
scale_y_continuous(labels = scales::comma_format()) +
coord_flip() +
theme(
panel.grid.minor.y = element_blank(),
panel.grid.major.y = element_blank(),
legend.position="none"
) +
xlab("") +
labs(
y = "Muertes por Covid-19");
datosparapie2$countriesAndTerritories <- factor(datosparapie2$countriesAndTerritories, levels = datosparapie2$countriesAndTerritories[order(datosparapie2$cada100)]);
grRank2 <- ggplot(data = datosparapie2,
mapping = aes(x=countriesAndTerritories, y=deathsAcum / popData2018 * 100000) ) +
geom_segment( aes(x=countriesAndTerritories ,xend=countriesAndTerritories, y=0, yend=deathsAcum / popData2018 * 100000), color="grey") +
geom_point(size=3, color="#69b3a2") +
geom_text(aes(y = deathsAcum / popData2018 * 100000, label = format(deathsAcum, big.mark = ".")), color="grey", size=3, nudge_y = 4) +
scale_y_continuous(labels = scales::comma_format()) +
coord_flip() +
theme(
panel.grid.minor.y = element_blank(),
panel.grid.major.y = element_blank(),
legend.position="none"
) +
xlab("") +
labs(
y = "Muertes por Covid-19 cada 100.000 habitantes",
caption = caption);
graficoRanking <- grRank1 + grRank2;
graficoRanking
ggplot(
data = continente[continente$casesAcum > 1000, ],
mapping = aes(
x = casesAcum,
y = casesAcumSemana,
color = Group.2)) +
geom_line() +
scale_x_log10(labels = scales::comma_format()) +
scale_y_log10(labels = scales::comma_format()) +
theme(legend.position="bottom", legend.title  = element_blank()) +
labs(x = 'Casos confirmados', y = 'Casos semanales', caption = caption) +
coord_cartesian(ylim = c(1000, max(continente$casesAcumSemana)));
grafico11 <- ggplot(
data = continente[continente$casesAcum > 1000, ],
mapping = aes(
x = casesAcum,
y = casesAcumSemana,
color = Group.2)) +
geom_line() +
scale_x_log10(labels = scales::comma_format()) +
scale_y_log10(labels = scales::comma_format()) +
theme(legend.position="bottom", legend.title  = element_blank()) +
labs(x = 'Casos confirmados', y = 'Casos semanales', caption = caption) +
coord_cartesian(ylim = c(1000, max(continente$casesAcumSemana)));
grafico13 <- ggplot(
data = continente[continente$casesAcum > 1000, ],
mapping = aes(
x = casosAcumCada100Mil,
y = casosAcumSemanaCada100Mil,
color = Group.2)) +
geom_line() +
scale_x_log10(labels = scales::comma_format()) +
scale_y_log10(labels = scales::comma_format()) +
theme(legend.position="bottom", legend.title  = element_blank()) +
labs(x = 'Casos confirmados cada 100.000 habitantes', y = 'Casos semanales cada 100.000 habitantes', caption = caption);
grafico12 <- ggplot(
data = continente[continente$Group.1 < (as.Date(max(continente$Group.1)) - 2),],
mapping = aes(
x = Group.1,
y = deathsAcum,
color = Group.2)) +
geom_line() +
#geom_point() +
#scale_x_log10(labels =   scales::comma_format()) +
scale_y_continuous(labels = scales::comma_format()) +
theme(legend.position="bottom", legend.title  = element_blank()) +
labs(x = element_blank(), y = 'Muertes', caption = caption) +
coord_cartesian(xlim = c(as.Date('2020-03-01'), as.Date(max(continente$Group.1))));
grafico14 <- ggplot(
data = continente[continente$Group.1 < (as.Date(max(continente$Group.1)) - 2),],
mapping = aes(
x = Group.1,
y = deathsAcum / popData2018 * 100000,
color = Group.2)) +
geom_line() +
#geom_point() +
#scale_x_log10(labels =   scales::comma_format()) +
scale_y_continuous(labels = scales::comma_format()) +
theme(legend.position="bottom", legend.title  = element_blank()) +
labs(x = element_blank(), y = 'Muertes cada 100.000 habitantes', caption = caption) +
coord_cartesian(xlim = c(as.Date('2020-03-01'), as.Date(max(continente$Group.1))));
grafico12 <- grafico12 + scale_colour_manual(values = coloresContinente);
grafico11 <- grafico11 + scale_colour_manual(values = coloresContinente);
grafico13 <- grafico13 + scale_colour_manual(values = coloresContinente);
grafico14 <- grafico14 + scale_colour_manual(values = coloresContinente);
grafico12 <- grafico12 + labs(caption = element_blank());
grafico15 <- grafico12 + grafico14;
grafico12 <- grafico11 + labs(caption = element_blank());
grafico16 <- grafico11 + grafico13;
grafico16
install.packages('eph')
install.packages(c("png", "raster", "leaflet"))
install.packages('png')
install.packages('raster')
install.packages(c("backports", "broom", "data.table", "dbplyr", "dplyr", "ellipsis", "fs", "ggplot2", "glue", "htmltools", "httpuv", "httr", "isoband", "jsonlite", "knitr", "later", "lubridate", "modelr", "openssl", "patchwork", "pillar", "pkgbuild", "pkgload", "processx", "promises", "ps", "Rcpp", "rmarkdown", "scales", "shiny", "sys", "tibble", "tidyr", "tidyselect", "tinytex", "TTR", "withr", "xfun", "zoo"))
install.packages("eph")
install.packages('questionr')
version()
version
version
install.packages(c("ggplot2", "htmlwidgets", "patchwork", "plotly", "readxl", "scales"))
source('~/covid/publica/fasecero.github.io/scripts/grafico10.r')
install.packages('tidyverse')
install.packages('xml2')
install.packages('xml2')
install.packages('tidyverse')
install.packages('eph')
library('eph')
library('tidyverse')
date <- get_microdata(year = 2019, trimester = 1)
data <- date
rm date
rm(date)
data
data <- organize_labels(data)
View(data)
calculate_tabulates(data, x='ESTADO', Y='ch04', weights = 'PONDERA', add.totals = 'both')
calculate_tabulates(data, x='ESTADO', y='ch04', weights = 'PONDERA', add.totals = 'both')
calculate_tabulates(data, x='ESTADO', y='CH04', weights = 'PONDERA', add.totals = 'both')
calculate_tabulates(data, x='ESTADO', y='CH04', weights = 'PONDERA', add.percentage = 'col')
calculate_tabulates(data, x='ESTADO', y='CH04', weights = 'PONDERA', add.percentage = 'row')
